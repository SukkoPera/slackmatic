.TH slackmat-build 8 "" "" "slackmatic user's manual"
.\" slackmat-build.8
.\" man page for slackmat-build
.\" wcm, 2007.04.18 - 2007.04.19
.\" ===
.SH NAME
slackmat-build \- build a slackware package
.SH SYNOPSIS
\fBslackmat-build [options]\fP
.SH DESCRIPTION
\fBslackmat-build\fP generates a Slackware-compliant .tgz package
from the slackmatic build specification found in the current working directory.
(See \fBFILES\fP below.)
.PP
\fBslackmat-build\fP is intended to handle all the steps of generating
a Slackware-compliant package from source with a single command:
download, checksum, unpack, patch, configure, compile, verify, and
assemble into .tgz archive. 
.\"
.\" OPTIONS
.\"
.SH OPTIONS
In normal usage no options are required to run \fBslackmat-build\fP.
The following options are available for port development,
special configurations and/or modification of default behavior:
.TP
.B "\-B, \-\-build\-file <file>"
Specify alternative build file.
Usually \fBslackmat\-build\fP runs the build controlled by the
file \fIBUILD.rc\fP in the current directory.
Use this option to specify an alternative build file.
(Note:  this option anticipates the possibility that a port developer
may want to evaluate and/or offer minor alternative
variants\(emor "flavors"\(emof a build, for example, \fIBUILD\-nox11.rc\fP.)
.TP
.B "\-c, \-\-config\-file <file>"
Specify configuration file.
Usually \fBslackmat\-build\fP looks for and reads
its configuration successively from
\fIslackmat.conf\fP files in \fI/etc/slackmatic\fP and \fI$HOME/.slackmatic\fP.
(In this way configuration in $HOME may be used to override/modify
the default configuration installed in \fI/etc\fP.)
Use this option to specify an alternative configuration file.
.TP
.B "\-C, \-\-checksum\-update"
Install/update checksum file.
A slackmatic port directory should normally be supplied with a
\fIchecksum.md5\fP file,
containing the md5sum(1) for each source file required by the build.
If this file is missing, or if the md5sums of the source files do
not match, \fBslackmat\-build\fP will fail.
This option is used to (re)generate the checksum file,
and should normally be necessary only during port development.
.TP
.B "\-D, \-\-download\-only"
Download source files only.
Use this option to download the source files only,
without completing the build.
.TP
.B "\-h, \-\-help"
Display brief help message and exit.
.TP
.B "\-R, \-\-root\-build"
In normal usage it is recommended that \fBslackmat\-build\fP
be run only as an unprivileged user, not as root.
When running as a non-root user,
\fBslackmat\-build\fP is designed to use fakeroot(1) internally
while building the package.
This provides greater security when building packages,
and helps to avoid accidentally clobbering files elsewhere on your system.
Use this option to insist on running \fBslackmat\-build\fP
with root privileges.
.TP
.B "\-s, \-\-source\-archive <dir>"
Specify directory to search for source files.
\fBslackmat\-build\fP will first check to see if source archives
are already available locally before attempting to download them.
The path to the local source archive directory may be set with the variable
SLACKMAT_DISTFILES in the \fIslackmat.conf\fP configuration file.
Use this option to specify an alternative location on the command\-line.
.TP
.B "\-S, \-\-nostrip"
Normally \fBslackmat\-build\fP automatically runs strip(1)
on binary object files (executables and libraries) found in the package.
Use this option to disable automatic stripping.
(Note:  normally the ports that require strip suppression will define
OPT_NOSTRIP=1 in their \fIBUILD.rc\fP file.)
.TP
.B "\-T, \-\-notrace"
Suppress the ``trace'' messages generated by \fBslackmat\-build\fP.
.TP
.B "\-W, \-\-waybill\-update"
Install/update waybill file.
A slackmatic port directory should normally be supplied with a
\fIwaybill.$ARCH\fP file,
where $ARCH corresponds to the default build target of the port.
This file is used to indicate and verify the contents of a successful build.
Normally \fBslackmat\-build\fP will fail if this file is missing,
or if the build result does not match the waybill specification.
Use this option if necessary to (re)generate the waybill file.
In general this option would be used only during port development.
However, the varying availability of optional libraries may affect the
actual contents of some builds from system to system.
In such cases,
this option may be used to override waybill errors,
once you are satisfied that the reported waybill variance is acceptable.
.\"
.\" FILES
.\"
.SH FILES
A slackmatic build specification is contained within a set of
files within a port directory,
taken by an invocation of \fBslackmat\-build\fP
as the current working directory.
They are usually supplied by the original port developer and/or
are generated automatically by \fBslackmat\-build\fP during the build:
.TP
.I "BUILD.rc"
This is the main file controlling the build of a package.
It contains a succint specification in \fBrc(1)\fP shell syntax
and is sourced by
\fBslackmat\-build\fP during execution.
This file includes a set of required variable definitions,
and one required function definition named ``build''.
.TP
.I "checksum.md5"
This file contains md5sum(1) signatures for each of the files
specified in the SOURCE variable within \fIBUILD.rc\fP.
It is used to verify the integrity of source archives.
.TP
.I "install/*"
Any files found in the optional \fIinstall\fP sub-directory of a port
are automatically copied into the top-level
\fIinstall/\fP directory of the package.
.TP
.I "keep.spec"
An optional grep(1)\ \-f pattern file.
Any files in the package matching patterns in \fIkeep.spec\fP
are automatically renamed with a `.new' extension.
These file names are then appended to a \fIdoinst.sh\fP script that protects existing files
of the original name from being clobbered during package upgrades,
if those files have been modified since original installation.
The "keep" mechanism is specifically intended to preserve
site-specific modifications made to any configuration files
that might be included with a package.
.TP
.I "$NAME-$RELEASE-$ARCH-$BUILD.tgz"
This file will appear after a successful \fBslackmat-build\fP
and will contain the Slackware-compatible .tgz package for the port.
.TP
.I "package"
This file will appear after a successful \fBslackmat\-build\fP
and will contain the filename of the most recently completed .tgz
package as described above.
(This file may be useful when scripting \fBslackmat\-build\fP
into a longer command sequence.)
.TP
.I "patches/*"
By convention, any patches included with the port should appear
in this subdirectory.
.TP
.I "slack\-desc"
The required Slackware description information for the package.
.TP
.I "slack\-desc.in"
An optional template file used by \fBslackmat-build\fP
to simplify the generation of
a \fIslack\-desc\fP file for the package.
This file may include any variable defined in \fIBUILD.rc\fP.
A global \fIslack\-desc.in\fP template may also be installed in
\fI$HOME/.slackmatic\fP or
\fI/etc/slackmatic\fP,
and will be used if not found in the current working directory.
.TP
.I "waybill.*"
One or more files named \fIwaybill.$ARCH\fP, where $ARCH is the
target for for the default build.
This file is used to specify the results expected from a successful build.
.TP
.I "work/*"
During execution \fBslackmat\-build\fP will create and use
this subdirectory as a work area to unpack and compile sources,
and construct an installation tree for the package.
Note:  after a successful completion of \fBslackmat\-build\fP,
the directory \fI./work/pkg\fP
will contain the result tree on which the makepkg(1) utility
has been called to assemble the final package .tgz file.
.\"
.\" EXAMPLES
.\"
.SH EXAMPLES
.PP
Use \fBslackmat\-build\fP to build a port, then install the result:
.PP
.nf
$ cd path/to/someport
$ slackmat-build && sudo installpkg `head -1 package`
.fi
.PP
Use \fBslackmat\-build\fP during port development
and (re)generate the checksum and waybill files:
.PP
.nf
$ slackmat-build -C -W
.fi
.PP
Modify the results of a \fBslackmat\-build\fP into a new package
with an rc(1) shell script:
.PP
.nf
#!/bin/rc
# slackmat-zen
# make a zenwalk compatible package from slackmat-build
#
# Note: run this version explicitly with fakeroot:
#
#   $ fakeroot slackmat-zen
#
CWD=`{pwd}
PKG=$CWD/work/pkg
ARCH=i686 slackmat-build -R &&
    @{
        . BUILD.rc
        cd $PKG
        # do zenwalk fixups in $PKG:
        # ...
        # then rerun makepkg:
        makepkg -l y -c n $CWD/$NAME-$RELEASE-$ARCH-$BUILD.tar.gz
    }

### EOF
.fi
.PP
Of course a similar effect may be obtained
by using the explodepkg(8) utility on the package,
modifying the tree, and then repackaging with makepkg(8).
.\"
.\" SEE ALSO
.\"
.SH SEE ALSO
slackmat\-clean(8), slackmat\-sync(8),
explodepkg(8), installpkg(8), makepkg(8), upgradepkg(8),
rc(1), fakeroot(1)
.PP
http://www.slackmatic.org/
.\"
.\"
.\" EOF
